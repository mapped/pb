// ******************************************************************************************************
// Copyright 2022 Mapped Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ******************************************************************************************************
syntax = "proto3";

import "mapped/cloud/types/typed_value.proto";
import "mapped/cloud/types/control.proto";

package mapped.gateway;

option java_multiple_files = true;
option java_package = "com.mapped.gateway";
option csharp_namespace = "Mapped.Gateway";
option go_package = "go.mapped.dev/pb/gateway;gateway";

// Mapped client connector auth service.
// gtm:ignore
// di:ignore
service EdgeControlService {
    // Write a property to one or more known subtended device(s)
    // Request: Unary
    // Response: Streaming
    rpc WriteProps(WritePropsRequest) returns (stream WritePropsResponse);
}

message WritePropsRequest {
    // The property value(s) to write
    repeated MappingKeyAndValue values = 1;

    // The timeout for each request to each subtended device in milliseconds
    // NOTE: UGAgent makes every attempt to parallelize these, but some devices don't support
    //       writing multiple properties at once, which means write requests must be serialized
    uint32 timeout_per_device_in_ms = 2;

    // Simulate the command by only validating the input and logging
    // do not send actual commands over the wire
    bool simulate = 100;
}

message WritePropsResponse {
    // The unique ID of this request to be provided to Mapped Support
    // for troubleshooting in the case of unexpected errors
    string request_id = 1;

    // The result of each property write
    repeated MappingKeyAndResult results = 2;
}

message MappingKeyAndValue {
    // The mappingKey where the value originated from or is to be written to
    string mapping_key = 1;

    // The value read or to be written 
    // NOTE: The value *type* must NOT change type between a read and a write
    mapped.cloud.types.TypedValue value = 2;
}

message MappingKeyAndResult {
    // The mappingKey where the this result originated from
    string mapping_key = 1;

    // The result code
    mapped.cloud.types.ControlResult result = 2;

    // Error description (if available)
    string error_description = 3;

    // Protocol-specific error class, for protocols that split class/code - like BACnet
    int64 protocol_error_class = 4;

    // Protocol-specific error code
    int64 protocol_error_code = 5;
}
